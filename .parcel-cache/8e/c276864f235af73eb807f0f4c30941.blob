var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MovieView", function () {
    return MovieView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  require('../../actions/actions');
  var _jsxFileName = "/Users/kumi/Codebase/react/mybrary/src/components/movie-view/movie-view.jsx";
  class MovieView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {};
    }
    addFavoriteMovie(movie) {
      let token = localStorage.getItem("token");
      let url = "https://kumi-movie-index.herokuapp.com/users/" + JSON.parse(localStorage.getItem("user")).Username + "/movies/" + movie._id;
      console.log(token);
      _axiosDefault.default.post(url, "", {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        // window.open("/", "_self");
        window.open("/users/" + JSON.parse(localStorage.getItem("user")).Username, "_self");
        alert("Added to favorites!");
      });
    }
    render() {
      const {movie} = this.props;
      if (!movie) return null;
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 43,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("img", {
          className: "movie-poster",
          src: movie.ImagePath,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 44,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-title",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 45,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 46,
            columnNumber: 11
          }
        }, "Title: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 47,
            columnNumber: 11
          }
        }, movie.Title)), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-description",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 49,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50,
            columnNumber: 11
          }
        }, "Description: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 51,
            columnNumber: 11
          }
        }, movie.Description)), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-genre",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/genres/${movie.Genre.Name}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55,
            columnNumber: 35
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 56,
            columnNumber: 13
          }
        }, "Genre")), " "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58,
            columnNumber: 11
          }
        }, movie.Genre.Name)), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-director",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 62,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/directors/${movie.Director.Name}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 62,
            columnNumber: 35
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 63,
            columnNumber: 13
          }
        }, "Director"))), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65,
            columnNumber: 11
          }
        }, movie.Director.Name)), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 9
          }
        }, " ", /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "dark",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 25
          }
        }, "Back"), " "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "info",
          onClick: () => this.addFavoriteMovie(movie),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69,
            columnNumber: 9
          }
        }, "Favorite"))
      );
    }
  }
  MovieView.propTypes = {
    movie: _propTypesDefault.default.shape({
      // movie prop may contain Title, and IF it does, it must be a string
      Title: _propTypesDefault.default.string.isRequired,
      Description: _propTypesDefault.default.string,
      Year: _propTypesDefault.default.number,
      ImagePath: _propTypesDefault.default.string.isRequired,
      Genre: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string,
        Biography: _propTypesDefault.default.string
      }),
      Director: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string,
        Bio: _propTypesDefault.default.string,
        Birthdate: _propTypesDefault.default.string
      }),
      Featured: _propTypesDefault.default.bool
    })
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
