var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegistrationView", function () {
    return RegistrationView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _jsxFileName = "/Users/kumi/Desktop/mybrary/src/components/registration-view/registration-view.jsx", _s = $RefreshSig$();
  function RegistrationView(props) {
    _s();
    // call the useState() method (imported from React) with an empty string This method returns an array that you destructure (break down into variables)
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    /*REVIEW
    const swapView = (e) => {
    e.preventDefault();
    history.push(`/login`);
    // window.location.pathname = `/login`
    }
    */
    const handleRegister = e => {
      e.preventDefault();
      // sends request to server for authentication
      // entire URL is in package.json under 'proxy' to get past CORS
      _axiosDefault.default.post('https://kumi-movie-index.herokuapp.com/users', {
        Username: username,
        Email: email,
        Password: password,
        Birthday: birthday
      }).then(response => {
        const data = response.data;
        alert("Registration Successful!");
        window.location.pathname = `/login`;
      }).catch(e => {
        console.log(e.response);
      });
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 17
        }
      }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        value: username,
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 17
        }
      }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "password",
        value: password,
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formEmail",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 17
        }
      }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "email",
        value: email,
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBirthday",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 62,
          columnNumber: 17
        }
      }, "Date of Birth:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "date",
        value: birthday,
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "dark",
        type: "submit",
        onClick: handleRegister,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65,
          columnNumber: 13
        }
      }, "Submit"))
    );
  }
  _s(RegistrationView, "tdA1KK8yaZidqYo0wscqshHt/KE=");
  _c = RegistrationView;
  RegistrationView.propTypes = {
    register: _propTypesDefault.default.shape({
      username: _propTypesDefault.default.string.isRequired,
      password: _propTypesDefault.default.string.isRequired,
      confirmPassword: _propTypesDefault.default.string.isRequired,
      birthdate: _propTypesDefault.default.instanceOf(Date).isRequired
    }),
    onRegister: _propTypesDefault.default.func
  };
  var _c;
  $RefreshReg$(_c, "RegistrationView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
