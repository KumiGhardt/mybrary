var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "GenreView", function () {
    return GenreView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactRouterDom = require("react-router-dom");
  require('react-bootstrap/Container');
  var _reactBootstrapCard = require('react-bootstrap/Card');
  var _reactBootstrapCardDefault = _parcelHelpers.interopDefault(_reactBootstrapCard);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _jsxFileName = "/Users/kumi/Desktop/mybrary/src/components/genre-view/genre-view.jsx";
  class GenreView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {};
    }
    render() {
      const {genre, movies} = this.props;
      if (!genre) return null;
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "genre-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 22,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "genre-name",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 23,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 24,
            columnNumber: 11
          }
        }, "Name: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 25,
            columnNumber: 11
          }
        }, genre.Genre.Name, ":")), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "genre-description",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 27,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 28,
            columnNumber: 11
          }
        }, "Description: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 29,
            columnNumber: 11
          }
        }, genre.Genre.Description)), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "genre-movies",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 32,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33,
            columnNumber: 11
          }
        }, "Movies in the ", genre.Genre.Name, " Genre: ")), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "d-flex row mp-6 mx-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36,
            columnNumber: 9
          }
        }, movies.map(movie => {
          if (movie.Genre.Name === genre.Genre.Name) {
            return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                key: movie._id,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default, {
                className: "mb-3 mr-2 h-100",
                style: {
                  width: '16rem'
                },
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 41,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Img, {
                variant: "top",
                src: movie.ImagePath,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 45,
                  columnNumber: 23
                }
              }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Body, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 46,
                  columnNumber: 23
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
                className: "text-muted",
                to: `/movies/${movie._id}`,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 47,
                  columnNumber: 25
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Title, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 51,
                  columnNumber: 27
                }
              }, movie.Title)), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Text, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 53,
                  columnNumber: 25
                }
              }, movie.Description.substring(0, 90), "...")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Footer, {
                className: "bg-white border-top-0",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 57,
                  columnNumber: 23
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
                to: `/movies/${movie._id}`,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 58,
                  columnNumber: 25
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
                variant: "link",
                className: "read-more-link pl-0",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 59,
                  columnNumber: 27
                }
              }, "Read more")))))
            );
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 9
          }
        }, " ", /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "dark",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 25
          }
        }, "Back"), " "))
      );
    }
  }
  GenreView.propTypes = {
    movie: _propTypesDefault.default.shape({
      Genre: {
        Name: _propTypesDefault.default.string,
        Description: _propTypesDefault.default.string
      }
    })
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
