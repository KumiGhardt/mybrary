var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactRouterDom = require("react-router-dom");
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRedux = require('react-redux');
  var _actionsActions = require('../../actions/actions');
  require('prop-types');
  var _reactBootstrapContainer = require('react-bootstrap/Container');
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _reactBootstrapRow = require('react-bootstrap/Row');
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapNav = require('react-bootstrap/Nav');
  var _reactBootstrapNavDefault = _parcelHelpers.interopDefault(_reactBootstrapNav);
  var _reactBootstrapNavbar = require('react-bootstrap/Navbar');
  var _reactBootstrapNavbarDefault = _parcelHelpers.interopDefault(_reactBootstrapNavbar);
  require('react-bootstrap/NavDropdown');
  require("react-bootstrap/Form");
  require("react-bootstrap/FormControl");
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  require('../main-view/main-view.scss');
  var _moviesListMoviesList = require('../movies-list/movies-list');
  var _moviesListMoviesListDefault = _parcelHelpers.interopDefault(_moviesListMoviesList);
  var _loginViewLoginView = require("../login-view/login-view");
  require("../movie-card/movie-card");
  var _movieViewMovieView = require("../movie-view/movie-view");
  var _registrationViewRegistrationView = require("../registration-view/registration-view");
  var _directorViewDirectorView = require("../director-view/director-view");
  var _genreViewGenreView = require("../genre-view/genre-view");
  var _profileViewProfileView = require("../profile-view/profile-view");
  var _profileViewProfileViewDefault = _parcelHelpers.interopDefault(_profileViewProfileView);
  var _jsxFileName = "/Users/kumi/Codebase/react/mybrary/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    // create component with constructor- the place to initialize a stateâ€™s values.
    constructor(props) {
      super(props);
      // initialized with an object containing movies that holds an array of movies
      const localUser = JSON.parse(localStorage.getItem('user'));
      this.state = {
        movies: [],
        selectedMovie: null,
        user: localUser,
        register: null
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      if (accessToken !== null) {
        // this.setState({
        // user: JSON.parse(localStorage.getItem('user'))
        // });
        this.getMovies(accessToken);
      }
    }
    /*When a user successfully logs in, this function updates the `user` property in state to that *particular user*/
    onLoggedIn(authData) {
      console.log('Auth Data User', authData.user);
      this.setState({
        user: authData.user
      });
      localStorage.setItem('token', authData.token);
      localStorage.setItem('user', JSON.stringify(authData.user));
      localStorage.setItem('favoriteMovies', authData.user.FavoriteMovies);
      window.location.pathname = '/';
      this.getMovies(authData.token);
    }
    logOut() {
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      this.setState({
        user: null
      });
      alert('You have logged out');
      window.open('/login', '_self');
    }
    /*make a GET request to heroku.*/
    getMovies(token) {
      _axiosDefault.default.get('https://kumi-movie-index.herokuapp.com/movies', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // #1
        this.props.setMovies(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    /*When a movie is clicked, this function is invoked and updates the state of the `selectedMovie` *property to that movie*/
    onMovieClick(movie) {
      this.setState({
        selectedMovie: movie
      });
    }
    onRegister(register) {
      this.setState({
        register
      });
    }
    render() {
      // #2
      let {movies} = this.props;
      let {user} = this.state;
      // destructure
      const {selectedMovie, register} = this.state;
      /*If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/
      if (window.location.pathname === '/') {
        if (!user) {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 129,
                columnNumber: 16
              }
            })
          );
        }
      }
      // Before the movies have been loaded
      if (!movies) return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134,
            columnNumber: 25
          }
        })
      );
      if (window.location.pathname === '/register') {
        return (
          /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 136,
              columnNumber: 14
            }
          })
        );
      }
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 139,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 140,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 141,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default.Brand, {
          href: "/",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 142,
            columnNumber: 13
          }
        }, "Home"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default.Toggle, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 143,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default.Collapse, {
          className: "justify-content-end",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 144,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default, {
          className: "justify-content-end",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 145,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default.Link, {
          href: `/users/${user.Username}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 146,
            columnNumber: 17
          }
        }, "My Account")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          onClick: () => this.logOut(),
          variant: "secondary",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 148,
            columnNumber: 15
          }
        }, "Log Out"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 154,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/register",
          render: () => /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 155,
              columnNumber: 55
            }
          }),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158,
                  columnNumber: 33
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_moviesListMoviesListDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 159,
                  columnNumber: 22
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 157,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match}) => /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
            movie: movies.find(m => m._id === match.params.movieId),
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 162,
              columnNumber: 67
            }
          }),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 162,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match}) => {
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 165,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name),
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 166,
                  columnNumber: 22
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match}) => {
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 170,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name),
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 171,
                  columnNumber: 22
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/users/:username",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: data => this.onLoggedIn(data),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 176,
                  columnNumber: 35
                }
              })
            );
            if (movies.length === 0) return;
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileViewDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 178,
                  columnNumber: 24
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 13
          }
        }))))
      );
    }
  }
  // #3
  let mapStateToProps = state => {
    return {
      movies: state.movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actionsActions.setMovies
  })(MainView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
